import org.gradle.process.internal.ExecException

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from:'ext.gradle'

def support_version = "27.1.1"
def lifecycle_version = "1.1.1"
def dagger_version = "2.16"
def okhttp_version = "3.10.0"
def retrofit_version = "2.4.0"
def converter_xml_version = "2.4.0"
def glide_version = "4.7.1"

def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId _packageName
        minSdkVersion 19
        targetSdkVersion 28
        versionCode _versionCode
        versionName generateVersionName(_versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        release {
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    buildTypes {
        debug {
            versionNameSuffix '.debug'
            debuggable true
        }
        release {
            versionNameSuffix '.release'
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:design:$support_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // architecture components
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation ("com.squareup.retrofit2:converter-simplexml:$converter_xml_version") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    // image loader
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"

    // pager sliding tab
    implementation 'com.jpardogo.materialtabstrip:library:1.1.1'

    // reactive X
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // log
    implementation "com.jakewharton.timber:timber:4.6.0"
}

def runCommandLine(String... params) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine params
        standardOutput = stdout
    }
    stdout.toString().trim()
}

def getGitVersion() {
    def log = null
    def desc = null
    def count = null
    try {
        log = runCommandLine('git', 'log', '-1', '--pretty=format:%h')
        desc = runCommandLine('git', 'describe', '--always', '--dirty')
        count = runCommandLine('git', 'rev-list', 'HEAD', '--count')
    } catch (ExecException ignored) {}
    if (desc != null && desc ==~ /^.*dirty$/) {
        return "${count}.${log}(M)"
    } else {
        return "${count}.${log}"
    }
}

def generateVersionName(versionName) {
    "${versionName}.${getGitVersion()}"
}